use Libraries.Game.Game
use Libraries.Game.Graphics.AmbientLight
use Libraries.Game.Graphics.DirectionalLight
use Libraries.Game.Graphics.Model
use Libraries.Game.Graphics.Color
use Libraries.Game.InputMonitor
use Libraries.Compute.Vector3
use Libraries.Interface.Events.KeyboardEvent

/*
    This is a default class for creating a game in Quorum. Note that the Main 
    action begins by calling StartGame(), which loads a window a game can 
    be displayed in. The action CreateGame is where the game should load any 
    assets, like images to be displayed, frames of animation, or sounds to be
    played. 
*/
class Main is Game
AmbientLight al
DirectionalLight dl
Model cube
Model ground
Color color
InputMonitor im
Vector3 force
KeyboardEvent button

    /*
        This action, Main, starts our computer program. In Quorum, programs always
        begin from Main.
    */
    action Main
        UseDesktopResolution()
        StartGame()
    end

    /*
        This action sets up the default values for a game. For example, we might
        use the Libraries.Game.Graphics.Drawable class to load up an image or 
        a shape. Or, we might add a Libraries.Interface.Button for making something clickable
        or a Libraries.Interface.TextBox for gathering user input in a game.
    */
    action CreateGame
        EnablePhysics3D(true)

        cube:LoadBox(1,1,1,color:Teal())
        cube:SetPosition(0,2,0)
        Add(cube)
        cube:EnablePhysics(true)
        cube:SetResponsive()
        cube:SetRestitution(0.5)

        ground:LoadBox(15,1,20,color:Cyan())
        ground:SetPosition(0,-2,0)
        Add(ground)
        ground:EnablePhysics(true)
        ground:SetUnmovable()

        al:SetColor(0.4,0.4,0.4,1)
        SetAmbientLight(al)
        
        dl:SetColor(0.8,0.8,0.8,1)
        dl:SetDirection(GetCamera3D():GetDirection())
        Add(dl)

        SetGravity3D(0,-10,0)
    end

    /*
        The update action is called on every "frame" of animation in a game. This
        action should be used to do operations on items. So, for example, we 
        might use this action to change frames of animation, to rotate items, 
        or to make creatures jump.
    */
    action Update(number seconds)
        if im:IsKeyPressed(button:UP)
            force:Set(0,11,0)
            cube:ApplyForceToCenter(force)
        end
        
        if im:IsKeyPressed(button:DOWN)
            force:Set(0,-11,0)
            cube:ApplyForceToCenter(force)
        end

        if im:IsKeyPressed(button:RIGHT)
            force:Set(2,0,0)
            cube:ApplyForceToCenter(force)
        end
        
        if im:IsKeyPressed(button:LEFT)
            force:Set(-2,0,0)
            cube:ApplyForceToCenter(force)
        end

        if im:IsKeyPressed(button:X)
            Exit()
        end
    end
end